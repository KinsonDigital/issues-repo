name: NET GitHub Action Sample

on:
  workflow_dispatch:

jobs:
  Run_Action_Sample:
    name: Run Action Sample
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Print Stuff
      run: |
        $errorMsg = "This is the exception message here`n";
        $errorMsg += "`tStack Trace:"; 
        $errorMsg += "`t`tat System.Environment.get_StackTrace()`n";
        $errorMsg += "`t`tat VersionMiner.Exceptions.ActionException..ctor(String message) in K:\SOFTWARE DEVELOPMENT\PERSONAL\VersionMiner\VersionMiner\Exceptions\ActionException.cs:line 14`n";
        $errorMsg += "`t`tat VersionMiner.Exceptions.NoXMLValueException..ctor(String message) in K:\SOFTWARE DEVELOPMENT\PERSONAL\VersionMiner\VersionMiner\ExceptionsNoXMLValueException.cs:line 21`n";
        $errorMsg += "`t`tat Program.<>c__DisplayClass0_0.<<Main>$>b__4(IEnumerable`1 errors) in K:\SOFTWARE DEVELOPMENT\PERSONAL\VersionMiner\VersionMiner\Program.cs:line 72`n";
        $errorMsg += "`t`tat CommandLine.ParserResultExtensions.WithNotParsed[T](ParserResult`1 result, Action`1 action)`n";
        $errorMsg += "`t`tat Program.<Main>`$(String[] args) in K:\SOFTWARE DEVELOPMENT\PERSONAL\VersionMiner\VersionMiner\Program.cs:line 65`n";
        $errorMsg += "`t`tat System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)`n";
        $errorMsg += "`t`tat Program.<Main>`$(String[] args)`n";
        $errorMsg += "`t`tat Program.<Main>(String[] args)";


        Write-Output "::notice::omg notice"
        Write-Output "::warning ::omg warning"
        Write-Output "::error   ::$errorMsg"

        Write-Output "::group::MyGroup"
        Write-Output "This is a message,"
        Write-Output "that is grouped,"
        Write-Output "and is pretty cool."
        Write-Output "::endgroup::"
      shell: pwsh


# Write-Output "::notice file=notice.js,line=10,endLine={endLine},title=Test Notice::omg notice"
# Write-Output "::warning file=app.js,line=30,title=Test Warning::omg warning"
# Write-Output "::error file={name},line=20,endLine={endLine},title=Test Error::omg error"